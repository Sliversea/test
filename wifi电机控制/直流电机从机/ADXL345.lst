C51 COMPILER V9.00   ADXL345                                                               10/22/2020 14:49:09 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ADXL345
OBJECT MODULE PLACED IN .\out\ADXL345.obj
COMPILER INVOKED BY: C:\program\keil\C51\BIN\C51.EXE src\ADXL345.c BROWSE DEBUG OBJECTEXTEND PRINT(.\ADXL345.lst) OBJECT
                    -(.\out\ADXL345.obj)

line level    source

   1          #include "config.h"
   2          #include "ADXL345.h"
   3          
   4          
   5          unsigned char xdata BUF[8];  //接收数据缓存区
   6          
   7          //**********************************************************************
   8          //函数名：Delay5us()
   9          //输入  ：无
  10          //输出  ：无
  11          //功能描述：产生延时5us
  12          //***********************************************************************
  13          void Delay5us()
  14          {  
  15   1           unsigned char a;
  16   1          for(a=26;a>0;a--);
  17   1      
  18   1       
  19   1      }
  20          
  21          //**********************************************************************
  22          //函数名：Delay5ms()
  23          //输入  ：无
  24          //输出  ：无
  25          //功能描述：产生延时5ms
  26          //***********************************************************************
  27          void Delay5ms()
  28          {
  29   1             unsigned char a,b,c;
  30   1             for(c=7;c>0;c--)
  31   1              for(b=168;b>0;b--)
  32   1                  for(a=22;a>0;a--);
  33   1      }
  34          
  35          //**********************************************************************
  36          //函数名：ADXL345_Start()
  37          //输入  ：无
  38          //输出  ：无
  39          //功能描述：产生IIC时序的起始信号
  40          //**********************************************************************
  41          void ADXL345_Start()
  42          {
  43   1          SDA = 1;                    //拉高数据线
  44   1          SCL = 1;                    //拉高时钟线
  45   1          Delay5us();                 //延时,即保证SDA及SCL为高电平
  46   1          SDA = 0;                    //产生下降沿
  47   1          Delay5us();                 //延时，参考ADXL345的中文技术手册P18的t4.
  48   1          SCL = 0;                    //拉低时钟线
  49   1      }
  50          
  51          //**********************************************************************
  52          //函数名：ADXL345_Stop()
  53          //输入  ：无
  54          //输出  ：无
C51 COMPILER V9.00   ADXL345                                                               10/22/2020 14:49:09 PAGE 2   

  55          //功能描述：产生IIC时序的停止信号
  56          //**********************************************************************
  57          void ADXL345_Stop()
  58          {
  59   1          SDA = 0;                    //拉低数据线
  60   1          SCL = 1;                    //拉高时钟线
  61   1          Delay5us();                 //延时参考ADXL345的中文技术手册P18的t8.
  62   1          SDA = 1;                    //产生上升沿
  63   1          Delay5us();                 //延时,普通延时
  64   1      }
  65          
  66          //**********************************************************************
  67          //函数名：ADXL345_SendACK(bit ack)
  68          //输入  ：ack(0:ACK 1:NAK)
  69          //输出  ：无
  70          //功能描述：发送应答信号
  71          //***********************************************************************
  72          void ADXL345_SendACK(bit ack)
  73          {
  74   1          SDA = ack;                  //写应答信号
  75   1          SCL = 1;                    //拉高时钟线
  76   1          Delay5us();                 //延时
  77   1          SCL = 0;                    //拉低时钟线
  78   1          Delay5us();                 //延时
  79   1      }
  80          
  81          
  82          //**********************************************************************
  83          //函数名：ADXL345_RecvACK()
  84          //输入  ：无
  85          //输出  ：ack(0:ACK 1:NAK)
  86          //功能描述：接收应答信号
  87          //***********************************************************************
  88          bit ADXL345_RecvACK()
  89          {
  90   1          SCL = 1;                    //拉高时钟线
  91   1          Delay5us();                 //延时
  92   1          CY = SDA;                   //读应答信号
  93   1          SCL = 0;                    //拉低时钟线
  94   1          Delay5us();                 //延时
  95   1      
  96   1          return CY;
  97   1      }
  98          
  99          //**********************************************************************
 100          //函数名：ADXL345_SendByte(BYTE dat)
 101          //输入  ：发送的数据字节信息
 102          //输出  ：无
 103          //功能描述：向IIC总线发送一个字节数据
 104          //**********************************************************************
 105          void ADXL345_SendByte(BYTE dat)
 106          {
 107   1          BYTE i;
 108   1      
 109   1          for (i=0; i<8; i++)         //8位计数器
 110   1          {
 111   2              dat <<= 1;              //移出数据的最高位
 112   2              SDA = CY;               //送数据口
 113   2              SCL = 1;                //拉高时钟线
 114   2              Delay5us();             //延时
 115   2              SCL = 0;                //拉低时钟线
 116   2              Delay5us();             //延时
C51 COMPILER V9.00   ADXL345                                                               10/22/2020 14:49:09 PAGE 3   

 117   2          }
 118   1          ADXL345_RecvACK();
 119   1      }
 120          
 121          //**********************************************************************
 122          //函数名：ADXL345_RecvByte()
 123          //输入  ：无
 124          //输出  ：返回单字节信息
 125          //功能描述：从IIC总线接收一个字节数据
 126          //*********************************************************************
 127          BYTE ADXL345_RecvByte()
 128          {
 129   1          BYTE i;
 130   1          BYTE dat = 0;
 131   1      
 132   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 133   1          for (i=0; i<8; i++)         //8位计数器
 134   1          {
 135   2              dat <<= 1;
 136   2              SCL = 1;                //拉高时钟线
 137   2              Delay5us();             //延时
 138   2              dat |= SDA;             //读数据               
 139   2              SCL = 0;                //拉低时钟线
 140   2              Delay5us();             //延时
 141   2          }
 142   1          return dat;
 143   1      }
 144          
 145          //**********************************************************************
 146          //函数名：Single_Write_ADXL345(uchar REG_Address,uchar REG_data)
 147          //输入  ：寄存器地址及要写入的字节数据
 148          //输出  ：无
 149          //功能描述：向指定的寄存器写一个字节数据，过程请参考中文手册P17
 150          //**********************************************************************
 151          void Single_Write_ADXL345(uchar REG_Address,uchar REG_data)
 152          {
 153   1          ADXL345_Start();                  //起始信号
 154   1          ADXL345_SendByte(SlaveAddress);   //发送设备地址+写信号
 155   1          ADXL345_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf22页 
 156   1          ADXL345_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf22页 
 157   1          ADXL345_Stop();                   //发送停止信号
 158   1      }
 159          
 160          //**********************************************************************
 161          //函数名：Single_Read_ADXL345(uchar REG_Address)
 162          //输入  ：要读取寄存器数据的地址
 163          //输出  ：寄存器数据
 164          //功能描述：从IIC总线读取指定寄存器字节数据，过程请参考中文手册P17
 165          //**********************************************************************
 166          uchar Single_Read_ADXL345(uchar REG_Address)
 167          {  uchar REG_data;
 168   1          ADXL345_Start();                          //起始信号
 169   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 170   1          ADXL345_SendByte(REG_Address);            //发送存储单元地址，从0开始       
 171   1          ADXL345_Start();                          //起始信号
 172   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 173   1          REG_data=ADXL345_RecvByte();              //读出寄存器数据
 174   1              ADXL345_SendACK(1);   
 175   1              ADXL345_Stop();                           //停止信号
 176   1          return REG_data; 
 177   1      }
 178          
C51 COMPILER V9.00   ADXL345                                                               10/22/2020 14:49:09 PAGE 4   

 179          //**********************************************************************
 180          //函数名：Multiple_read_ADXL345(void)
 181          //输入  ：无
 182          //输出  ：无
 183          //功能描述：连续读出ADXL345内部加速度数据，地址范围0x32~0x37，过程请参考中文手册P17
 184          //          把从ADXL345读取的X,Y,Z共6个字节数据存放在BUF[]缓存中
 185          //***********************************************************************
 186          void Multiple_read_ADXL345(void)
 187          {   uchar i;
 188   1          ADXL345_Start();                          //起始信号
 189   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 190   1          ADXL345_SendByte(0x32);                   //发送存储单元地址，从0x32开始    
 191   1          ADXL345_Start();                          //起始信号
 192   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 193   1               for (i=0; i<6; i++)                      //连续读取6个地址数据，存储中BUF
 194   1          {
 195   2              BUF[i] = ADXL345_RecvByte();          //BUF[0]存储0x32地址中的数据
 196   2              if (i == 5)
 197   2              {
 198   3                 ADXL345_SendACK(1);                //最后一个数据需要回NOACK
 199   3              }
 200   2              else
 201   2              {
 202   3                ADXL345_SendACK(0);                //回应ACK
 203   3             }
 204   2         }
 205   1          ADXL345_Stop();                          //停止信号
 206   1          Delay5ms();
 207   1      }
 208          
 209          //**********************************************************************
 210          //函数名：Init_ADXL345()
 211          //输入  ：无
 212          //输出  ：无
 213          //功能描述：初始化ADXL345，过程请参考ADCL345快速入门P3及P6
 214          //**********************************************************************
 215          void Init_ADXL345()
 216          {
 217   1         Single_Write_ADXL345(0x31,0x0b);   //测量范围,正负16g，13位模式
 218   1         Single_Write_ADXL345(0x2C,0x0A);   //速率设定为100 参考pdf13页
 219   1         Single_Write_ADXL345(0x2D,0x08);   //选择电源模式为测量模式，参考pdf24页
 220   1         Single_Write_ADXL345(0x2E,0x80);   //使能 DATA_READY 中断
 221   1         Single_Write_ADXL345(0x1E,0xfa);   //X 偏移量 根据测试传感器的状态写入pdf29页
 222   1         Single_Write_ADXL345(0x1F,0xfd);   //Y 偏移量 根据测试传感器的状态写入pdf29页
 223   1         Single_Write_ADXL345(0x20,0x06);   //Z 偏移量 根据测试传感器的状态写入pdf29页
 224   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    294    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
